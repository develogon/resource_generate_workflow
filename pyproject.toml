[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "resource-generate-workflow"
version = "0.1.0"
description = "高性能コンテンツ生成ワークフローシステム"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Kazuki Nomiya", email = "kazuki@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "asyncio",
    "aiofiles>=23.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "tenacity>=8.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "python-frontmatter>=1.0.0",
    "aioredis>=2.0.0,<3.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.10.0",
    "redis>=4.5.0",
    "psutil>=5.9.0",
]

dev = [
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "types-redis>=4.0.0",
    "ipython>=8.0.0",
    "pdbpp>=0.10.3",
]

all = [
    "resource-generate-workflow[test,dev]",
]

[project.scripts]
resource-workflow = "src.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88 