"""
ツイート生成のテスト用サンプルデータ
"""

# ツイート用サンプル入力データ
SAMPLE_TWEETS_INPUT = {
    "ARTICLE_CONTENT": "Goの並行処理機能についての解説です。goroutineとchannelを使った例を紹介します。Goの並行処理の特徴は、軽量なgoroutineとchannelによる通信にあります。数千のgoroutineを同時に実行でき、メモリ消費量は数KBから始まります。channelを使った通信により、「通信によって共有する」というGo言語の思想を実現しています。",
    "template_path": "templates/prompts/tweet.md"
}

# ツイート用サンプルテンプレート
SAMPLE_TWEETS_TEMPLATE = """
## 記事内容
{{ARTICLE_CONTENT}}

## 条件
### 1. **アカウントのミッションとスタイル**
- **ミッション:** 「難解なバックエンド技術を誰よりも分かりやすく」をテーマに、「分かりやすい形」で届ける。
- **スタイル:** 忖度なしで本質をズバッと言うが、人間味やユーモアを交えて親しみやすさを演出。

### 2. **投稿要件**
1. 冒頭文で簡潔にユーザーの興味を引く工夫をする
2. **必ず全角140文字程度で作成する**
3. 絵文字やハッシュタグは使用しない
"""

# サンプル生成ツイート (CSV形式)
SAMPLE_GENERATED_TWEETS = """2023/07/25 12:30,"並行処理って普通は面倒だけど、Go言語ではgoroutineという仕組みで超簡単。たった数KBのメモリで数千の処理を同時実行できるから驚異的に効率がいい。「通信によって共有する」という思想も秀逸。スレッドやロックで頭を悩ませていた方には朗報ですね。"
2023/07/25 18:00,"Go言語の並行処理は「人間の直感」に近い設計になっている。複数の作業を同時に進める時、人は「誰かにタスクを投げて(goroutine)」「必要なら連絡をもらう(channel)」。まさにこの感覚。これを理解すれば、複雑な並行処理も怖くない。"
2023/07/26 08:00,"「並行処理が難しい」は昔の話。Go言語では「go」というキーワード一つで別の処理を走らせられる。しかもわずか数KBのメモリから始まるので、数万の並行処理も余裕。これが現代のバックエンド開発。並行性能で悩んでいるなら、Goを検討する価値あり。"
""" 